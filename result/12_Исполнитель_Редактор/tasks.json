[{"subtype": "Исполнитель Редактор", "task_id": 0, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда\n </i>\n 1\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда\n </i>\n 2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется\n <i>\n  команда\n </i>\n 1 (если условие истинно) или\n <i>\n  команда\n </i>\n 2 (если условие ложно).\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 69 идущих подряд цифр 8? В ответе запишите полученную строку.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (3333) ИЛИ нашлось (8888)\n</p>\n<p>\n ЕСЛИ нашлось (3333)\n</p>\n<p>\n ТО заменить (3333, 88)\n</p>\n<p>\n ИНАЧЕ заменить (8888, 33)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "888"}, {"subtype": "Исполнитель Редактор", "task_id": 1, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её.\n</p>\n<p>\n Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (v, w).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (v).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ условие\n</p>\n<p>\n ТО команда1\n</p>\n<p>\n ИНАЧЕ команда2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n</p><p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n</p>\n<p>\n Ниже приведена программа для исполнителя Редактор.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (19) ИЛИ нашлось (299) ИЛИ нашлось (3999)\n</p>\n<p>\n заменить (19, 2)\n</p>\n<p>\n заменить (299, 3)\n</p>\n<p>\n заменить (3999, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p><p>\n На вход этой программе подаётся строка длины 94, состоящая из цифры 3, за которой следуют 93 идущих подряд цифр 9.\n</p>\n<p>\n Какая строка получится в результате применения программы к этой строке?\n</p>", "answer": "1"}, {"subtype": "Исполнитель Редактор", "task_id": 2, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется\n <i>\n  команда1\n </i>\n (если условие истинно) или\n <i>\n  команда2\n </i>\n (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Ниже приведена программа для исполнителя Редактор.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА\n <b>\n  нашлось\n </b>\n (133) ИЛИ\n <b>\n  нашлось\n </b>\n (881)\n</p>\n<p>\n ЕСЛИ\n <b>\n  нашлось\n </b>\n (133)\n</p>\n<p>\n ТО\n <b>\n  заменить\n </b>\n (133, 81)\n</p>\n<p>\n ИНАЧЕ\n <b>\n  заменить\n </b>\n (881, 13)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n На вход этой программе подается строка, состоящая из 100 цифр; последняя цифра в строке — цифра 1, а остальные цифры — восьмёрки. Какая строка получится в результате применения программы к этой строке? В ответе запишите полученную строку.\n</p>", "answer": "813"}, {"subtype": "Исполнитель Редактор", "task_id": 3, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n )\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Определите количество нулей в строке, получившейся в результате применения приведённой ниже программы к входной строке, состоящей из единицы, за которой следуют 80 нулей подряд. В ответе запишите только количество нулей в получившейся строке.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (10) ИЛИ нашлось (1)\n</p>\n<p>\n ЕСЛИ нашлось (10)\n</p>\n<p>\n ТО заменить (10, 001)\n</p>\n<p>\n ИНАЧЕ\n</p>\n<p>\n ЕСЛИ нашлось(1)\n</p>\n<p>\n ТО заменить (1, 000)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "163"}, {"subtype": "Исполнитель Редактор", "task_id": 4, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 11)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n К исходной строке, содержащей более 60 единиц и не содержащей других символов, применили приведённую выше программу. В результате получилась строка 2211. Какое наименьшее количество единиц могло быть в исходной строке?\n</p>", "answer": "64"}, {"subtype": "Исполнитель Редактор", "task_id": 5, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 66 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 3)\n</p>\n<p>\n заменить (333, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "3211"}, {"subtype": "Исполнитель Редактор", "task_id": 6, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 68 троек?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (999) ИЛИ нашлось (333)\n</p>\n<p>\n ЕСЛИ нашлось (333)\n</p>\n<p>\n ТО заменить (333, 9)\n</p>\n<p>\n ИНАЧЕ\n</p>\n<p>\n заменить (999, 3)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "93"}, {"subtype": "Исполнитель Редактор", "task_id": 7, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (&gt;1) ИЛИ нашлось (&gt;2) ИЛИ нашлось (&gt;0)\n</p>\n<p>\n ЕСЛИ нашлось (&gt;1)\n</p>\n<p>\n ТО заменить (&gt;1, 22&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (&gt;2)\n</p>\n<p>\n ТО заменить (&gt;2, 2&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (&gt;0)\n</p>\n<p>\n ТО заменить (&gt;0, 1&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n На вход приведённой выше программе поступает строка, начинающаяся с символа «&gt;», а затем содержащая 39 цифр «0»,\n <i>\n  n\n </i>\n цифр «1» и 39 цифр «2», расположенных в произвольном порядке.\n</p>\n<p>\n Определите наименьшее значение\n <i>\n  n\n </i>\n , при котором сумма числовых значений цифр строки, получившейся в результате выполнения программы, является простым числом.\n</p>", "answer": "5"}, {"subtype": "Исполнитель Редактор", "task_id": 8, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (12)\n</p>\n<p>\n заменить (12, 4)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Исходная строка содержит десять единиц и некоторое количество двоек, других цифр нет, точный порядок расположения единиц и двоек неизвестен. После выполнения программы получилась строка с суммой цифр 25. Какое наименьшее количество двоек могло быть в исходной строке?\n</p>", "answer": "5"}, {"subtype": "Исполнитель Редактор", "task_id": 9, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)\n</p>\n<p>\n заменить (01, 30)\n</p>\n<p>\n заменить (02, 101)\n</p>\n<p>\n заменить (03, 202)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки. После выполнения данной программы получилась строка, содержащая 20 единиц, 10 двоек и 70 троек. Сколько единиц было в исходной строке?\n</p>", "answer": "50"}, {"subtype": "Исполнитель Редактор", "task_id": 10, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 101 единицы?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 22)\n</p>\n<p>\n заменить (222, 11)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "112"}, {"subtype": "Исполнитель Редактор", "task_id": 11, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её.\n</p>\n<p>\n Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (v, w).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27) преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (v, w) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (v).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ условие\n</p>\n<p>\n ТО команда1\n</p>\n<p>\n ИНАЧЕ команда2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n</p><p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Ниже приведена программа для исполнителя Редактор.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (19) ИЛИ нашлось (299) ИЛИ нашлось (3999)\n</p>\n<p>\n заменить (19, 2)\n</p>\n<p>\n заменить (299, 3)\n</p>\n<p>\n заменить (3999, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p><p>\n На вход этой программе подаётся строка длины 101, состоящая из цифры 2, за которой следуют 100 идущих подряд цифр 9.\n</p>\n<p>\n Какая строка получится в результате применения программы к этой строке?\n</p>", "answer": "399"}, {"subtype": "Исполнитель Редактор", "task_id": 12, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (11)\n</p>\n<p>\n ЕСЛИ нашлось (112)\n</p>\n<p>\n ТО заменить (112, 6)\n</p>\n<p>\n ИНАЧЕ заменить (11, 3)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Исходная строка содержит десять единиц и четыре двойки, других цифр нет, точный порядок расположения единиц и двоек неизвестен. Какую наибольшую сумму цифр может иметь строка, которая получится после выполнения программы?\n</p>", "answer": "27"}, {"subtype": "Исполнитель Редактор", "task_id": 13, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 99 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (11, 2)\n</p>\n<p>\n заменить (22, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "21"}, {"subtype": "Исполнитель Редактор", "task_id": 14, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (v, w).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w.\n</p>\n<p>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)  преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (v, w) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (v). Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА  условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n</p><p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ  условие\n</p>\n<p>\n ТО команда 1\n</p>\n<p>\n ИНАЧЕ команда 2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n</p><p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке длины 101, в которой первый и последний символ – это цифры 1, а остальные символы – цифры 8?\n</p>\n<p>\n В ответе запишите полученную строку.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА  нашлось (81) ИЛИ нашлось (882) ИЛИ нашлось (8883)\n</p>\n<p>\n ЕСЛИ  нашлось (81)\n</p>\n<p>\n ТО заменить (81, 2)\n</p>\n<p>\n ИНАЧЕ ЕСЛИ  нашлось (882)\n</p>\n<p>\n ТО заменить (882, 3)\n</p>\n<p>\n ИНАЧЕ заменить (8883, 1)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>", "answer": "13"}, {"subtype": "Исполнитель Редактор", "task_id": 15, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда1 (если условие ложно)\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)\n</p>\n<p>\n заменить (01, 20)\n</p>\n<p>\n заменить (02, 120)\n</p>\n<p>\n заменить (03, 302)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка начинается с цифры 0, а далее содержит 12 цифр 1, 15 цифр 2 и 17 цифр 3, расположенных в произвольном порядке. Сколько цифр 1 будет в строке, которая получится после выполнения данной программы?\n</p>", "answer": "32"}, {"subtype": "Исполнитель Редактор", "task_id": 16, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды заменить (111, 27) преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ условие\n</p>\n<p>\n ТО команда1\n</p>\n<p>\n ИНАЧЕ команда2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 77 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (11)\n</p>\n<p>\n ЕСЛИ нашлось (222)\n</p>\n<p>\n ТО заменить (222, 1)\n</p>\n<p>\n ИНАЧЕ заменить (11, 2)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "2221"}, {"subtype": "Исполнитель Редактор", "task_id": 17, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке вида 1…12…2 (39 единиц и 39 двоек)?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "12"}, {"subtype": "Исполнитель Редактор", "task_id": 18, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 11)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой выше программы к строке, состоящей из 78 единиц?\n</p>", "answer": "2211"}, {"subtype": "Исполнитель Редактор", "task_id": 19, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется\n <i>\n  команда1\n </i>\n (если условие истинно) или\n <i>\n  команда2\n </i>\n (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Ниже приведена программа для исполнителя Редактор.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (19) ИЛИ нашлось (299) ИЛИ нашлось (3999)\n</p>\n<p>\n <b>\n  заменить\n </b>\n (19, 2)\n</p>\n<p>\n <b>\n  заменить\n </b>\n (299, 3)\n</p>\n<p>\n <b>\n  заменить\n </b>\n (3999, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n На вход этой программе подаётся строка длины 101, состоящая из цифры 1, за которой следуют 100 идущих подряд цифр 9. Какая строка получится в результате применения программы к этой строке?\n</p>", "answer": "39"}, {"subtype": "Исполнитель Редактор", "task_id": 20, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n На вход приведённой ниже программе поступает строка, начинающаяся с символа «&gt;», а затем содержащая 10 цифр 1, 20 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.\n</p>\n<p>\n Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.\n</p>\n<p>\n Так, например, если результат работы программы представлял бы собой строку, состоящую из 50 цифр 4, то верным ответом было бы число 200.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (&gt;1) ИЛИ нашлось (&gt;2) ИЛИ нашлось (&gt;3)\n</p>\n<p>\n ЕСЛИ нашлось (&gt;1)\n</p>\n<p>\n ТО заменить (&gt;1, 22&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (&gt;2)\n</p>\n<p>\n ТО заменить (&gt;2, 2&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (&gt;3)\n</p>\n<p>\n ТО заменить (&gt;3, 1&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "110"}, {"subtype": "Исполнитель Редактор", "task_id": 21, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (&gt;1) ИЛИ нашлось (&gt;2) ИЛИ нашлось (&gt;3)\n</p>\n<p>\n ЕСЛИ нашлось (&gt;1)\n</p>\n<p>\n ТО заменить (&gt;1, 22&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (&gt;2)\n</p>\n<p>\n ТО заменить (&gt;2, 2&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (&gt;3)\n</p>\n<p>\n ТО заменить (&gt;3, 1&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n На вход приведённой ниже программе поступает строка, начинающаяся с символа «&gt;», а затем содержащая 26 цифр 1, 10 цифр 2 и 14 цифр 3, расположенных в произвольном порядке.\n</p>\n<p>\n Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы. Так, например, если результат работы программы представлял бы собой строку, состоящую из 50 цифр 4, то верным ответом было бы число 200.\n</p>", "answer": "138"}, {"subtype": "Исполнитель Редактор", "task_id": 22, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её.\n</p>\n<p>\n Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (v).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ условие\n</p>\n<p>\n ТО команда1\n</p>\n<p>\n ИНАЧЕ команда2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n</p><p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно). Часть ИНАЧЕ может отсутствовать, в этом случае, если условие ложно, никакие действия не выполняются.\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке вида 1…12…2 (8 единиц, затем 8 двоек)? В ответе запишите полученную строку.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111) ИЛИ нашлось (222)\n</p>\n<p>\n ЕСЛИ нашлось (111)\n</p>\n<p>\n ТО заменить (111, 2)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (222)\n</p>\n<p>\n ТО заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>", "answer": "1122"}, {"subtype": "Исполнитель Редактор", "task_id": 23, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 80 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (11111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "2211"}, {"subtype": "Исполнитель Редактор", "task_id": 24, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 11)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n К исходной строке, содержащей более 60 единиц и не содержащей других символов, применили приведённую выше программу. В результате получилась строка 221. Какое наименьшее количество единиц могло быть в исходной строке?\n</p>", "answer": "63"}, {"subtype": "Исполнитель Редактор", "task_id": 25, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (1111) ИЛИ нашлось (88888)\n</p>\n<p>\n ЕСЛИ нашлось (1111)\n</p>\n<p>\n ТО заменить (1111, 888)\n</p>\n<p>\n ИНАЧЕ заменить (88888, 888)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой выше программы к строке, состоящей из 81 идущей подряд цифры 1? В ответе запишите полученную строку.\n</p>", "answer": "88881"}, {"subtype": "Исполнитель Редактор", "task_id": 26, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (11)\n</p>\n<p>\n ЕСЛИ нашлось (112)\n</p>\n<p>\n ТО заменить (112, 6)\n</p>\n<p>\n ИНАЧЕ заменить (11, 3)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Исходная строка содержит десять единиц и три двойки, других цифр нет, точный порядок расположения единиц и двоек неизвестен. Какую наибольшую сумму цифр может иметь строка, которая получится после выполнения программы?\n</p>", "answer": "24"}, {"subtype": "Исполнитель Редактор", "task_id": 27, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (1111)\n</p>\n<p>\n заменить (1111, 22)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр. При какой наименьшей длине исходной строки результат работы данной программы будет содержать наибольшее возможное число единиц?\n</p>", "answer": "201"}, {"subtype": "Исполнитель Редактор", "task_id": 28, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА НЕ нашлось (00)\n</p>\n<p>\n заменить (01, 210)\n</p>\n<p>\n заменить (02, 320)\n</p>\n<p>\n заменить (03, 3012)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка начиналась с нуля и заканчивалась нулём, а между ними содержала только единицы, двойки и тройки. После выполнения данной программы получилась строка, содержащая 23 единицы, 48 двоек и 41 тройку. Сколько цифр было в исходной строке?\n</p>", "answer": "34"}, {"subtype": "Исполнитель Редактор", "task_id": 29, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 101 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (1111)\n</p>\n<p>\n заменить (1111, 22)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "12111"}, {"subtype": "Исполнитель Редактор", "task_id": 30, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 22)\n</p>\n<p>\n заменить (222, 11)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка содержала более 100 единиц и не содержала других цифр. Укажите минимально возможную длину исходной строки, при которой в результате работы этой программы получится строка, содержащая максимально возможное количество единиц.\n</p>", "answer": "103"}, {"subtype": "Исполнитель Редактор", "task_id": 31, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 98 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (1111)\n</p>\n<p>\n заменить (1111, 22)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "12"}, {"subtype": "Исполнитель Редактор", "task_id": 32, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111) или нашлось (88888)\n</p>\n<p>\n ЕСЛИ нашлось (111)\n</p>\n<p>\n ТО заменить (111, 88)\n</p>\n<p>\n ИНАЧЕ заменить (88888, 8)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n На вход программе подана строка из 100 единиц. Какая строка будет получена исполнителем после выполнения данного алгоритма?\n</p>", "answer": "881"}, {"subtype": "Исполнитель Редактор", "task_id": 33, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (555, 63)\n</p>\n<p>\n преобразует строку 12555550 в строку 1263550.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется\n <i>\n  команда1\n </i>\n (если условие истинно) или\n <i>\n  команда2\n </i>\n (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 1000 идущих подряд цифр 9? В ответе запишите полученную строку.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА\n <b>\n  нашлось\n </b>\n (999) ИЛИ\n <b>\n  нашлось\n </b>\n (888)\n</p>\n<p>\n ЕСЛИ\n <b>\n  нашлось\n </b>\n (888)\n</p>\n<p>\n ТО\n <b>\n  заменить\n </b>\n (888, 9)\n</p>\n<p>\n ИНАЧЕ\n <b>\n  заменить\n </b>\n (999, 8)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "8899"}, {"subtype": "Исполнитель Редактор", "task_id": 34, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (1111)\n</p>\n<p>\n заменить (1111, 22)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр. При какой наименьшей длине исходной строки результат работы данной программы будет содержать наименьшее возможное число единиц?\n</p>", "answer": "204"}, {"subtype": "Исполнитель Редактор", "task_id": 35, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке вида 1…12…2 (40 единиц и 40 двоек)?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "2112"}, {"subtype": "Исполнитель Редактор", "task_id": 36, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА НЕ нашлось (00)\n</p>\n<p>\n заменить (01, 210)\n</p>\n<p>\n заменить (02, 320)\n</p>\n<p>\n заменить (03, 3012)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка начиналась с нуля и заканчивалась нулём, а между ними содержала только единицы, двойки и тройки. После выполнения данной программы получилась строка, содержащая 26 единиц, 54 двойки и 48 троек. Сколько цифр было в исходной строке?\n</p>", "answer": "36"}, {"subtype": "Исполнитель Редактор", "task_id": 37, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (v, w).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w.\n</p>\n<p>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)  преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (v, w) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (v). Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА  условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n</p><p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n В конструкции\n</p>\n<p>\n</p>\n<p>\n ЕСЛИ  условие\n</p>\n<p>\n ТО команда1\n</p>\n<p>\n ИНАЧЕ команда2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n</p><p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке длины 101, в которой первый и последний символ – это цифры 2, а остальные символы – цифры 8?\n</p>\n<p>\n В ответе запишите полученную строку.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА  нашлось (81) ИЛИ нашлось (882) ИЛИ нашлось (8883)\n</p>\n<p>\n ЕСЛИ  нашлось (81)\n</p>\n<p>\n ТО заменить (81, 2)\n</p>\n<p>\n ИНАЧЕ ЕСЛИ  нашлось (882)\n</p>\n<p>\n ТО заменить (882, 3)\n</p>\n<p>\n ИНАЧЕ заменить (8883, 1)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>", "answer": "283"}, {"subtype": "Исполнитель Редактор", "task_id": 38, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 77 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 3)\n</p>\n<p>\n заменить (333, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "33221"}, {"subtype": "Исполнитель Редактор", "task_id": 39, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 77 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (11111)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "2221111"}, {"subtype": "Исполнитель Редактор", "task_id": 40, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется\n <i>\n  команда1\n </i>\n (если условие истинно) или\n <i>\n  команда2\n </i>\n (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Ниже приведена программа для исполнителя Редактор.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА\n <b>\n  нашлось\n </b>\n (722) ИЛИ\n <b>\n  нашлось\n </b>\n (557)\n</p>\n<p>\n ЕСЛИ\n <b>\n  нашлось\n </b>\n (722)\n</p>\n<p>\n ТО\n <b>\n  заменить\n </b>\n (722, 57)\n</p>\n<p>\n ИНАЧЕ\n <b>\n  заменить\n </b>\n (557, 72)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n На вход этой программе подается строка, состоящая из 55 цифр; последняя цифра в строке — цифра 7, а остальные цифры — пятёрки. Какая строка получится в результате применения программы к этой строке? В ответе запишите полученную строку.\n</p>", "answer": "572"}, {"subtype": "Исполнитель Редактор", "task_id": 41, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке вида 1…12…2 (46 единиц и 46 двоек)?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "2112"}, {"subtype": "Исполнитель Редактор", "task_id": 42, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (49) ИЛИ нашлось (97) ИЛИ нашлось (47)\n</p>\n<p>\n ЕСЛИ нашлось (47)\n</p>\n<p>\n ТО заменить (47, 74)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (97)\n</p>\n<p>\n ТО заменить (97, 79)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (49)\n</p>\n<p>\n ТО заменить (49, 94)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n На вход приведённой ниже программе поступает строка, содержащая 40 цифр 7, 40 цифр 9 и 50 цифр 4, расположенных в произвольном порядке. Запишите без разделителей символы, которые имеют порядковые номера 25, 71 и 105 в получившейся строке.\n</p>", "answer": "794"}, {"subtype": "Исполнитель Редактор", "task_id": 43, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)\n</p>\n<p>\n заменить (01, 2302)\n</p>\n<p>\n заменить (02, 10)\n</p>\n<p>\n заменить (03, 201)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки. После выполнения данной программы получилась строка, содержащая 40 единиц, 10 двоек и 8 троек. Сколько единиц было в исходной строке?\n</p>", "answer": "6"}, {"subtype": "Исполнитель Редактор", "task_id": 44, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (21)\n</p>\n<p>\n заменить (21, 5)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Исходная строка содержит десять единиц и некоторое количество двоек, других цифр нет, точный порядок расположения единиц и двоек неизвестен. После выполнения программы получилась строка с суммой цифр 34. Какое наименьшее количество двоек могло быть в исходной строке?\n</p>", "answer": "6"}, {"subtype": "Исполнитель Редактор", "task_id": 45, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды заменить (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется\n <i>\n  команда1\n </i>\n (если условие истинно) или\n <i>\n  команда2\n </i>\n (если условие ложно).\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из цифры 1, за которой следуют 80 идущих подряд цифр 8? В ответе запишите полученную строку.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА\n <b>\n  нашлось\n </b>\n (18) ИЛИ\n <b>\n  нашлось\n </b>\n (288) ИЛИ\n <b>\n  нашлось\n </b>\n (3888)\n</p>\n<p>\n ЕСЛИ\n <b>\n  нашлось\n </b>\n (18)\n</p>\n<p>\n ТО\n <b>\n  заменить\n </b>\n (18, 2)\n</p>\n<p>\n ИНАЧЕ ЕСЛИ\n <b>\n  нашлось\n </b>\n (288)\n</p>\n<p>\n ТО\n <b>\n  заменить\n </b>\n (288, 3)\n</p>\n<p>\n ИНАЧЕ\n <b>\n  заменить\n </b>\n (3888, 1)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "28"}, {"subtype": "Исполнитель Редактор", "task_id": 46, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 79 семёрок?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (7777) ИЛИ нашлось (3333)\n</p>\n<p>\n ЕСЛИ нашлось (3333)\n</p>\n<p>\n ТО заменить (3333, 77)\n</p>\n<p>\n ИНАЧЕ\n</p>\n<p>\n заменить (7777, 33)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "33777"}, {"subtype": "Исполнитель Редактор", "task_id": 47, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\n</p>\n<p>\n</p>\n<p>\n 1. заменить (\n <i>\n  v, w\n </i>\n )\n</p>\n<p>\n 2. нашлось (\n <i>\n  v\n </i>\n )\n</p>\n<p>\n</p>\n<p>\n Первая команда заменяет в строке первое слева вхождение цепочки v на цепочку w, вторая проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из одной единицы и 75 стоящих справа от нее нулей? В ответе запишите сколько нулей будет в конечной строке.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (10) ИЛИ нашлось (1)\n</p>\n<p>\n ЕСЛИ нашлось (10)\n</p>\n<p>\n ТО заменить (10, 001)\n</p>\n<p>\n ИНАЧЕ заменить (1, 00)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "152"}, {"subtype": "Исполнитель Редактор", "task_id": 48, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 99 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 22)\n</p>\n<p>\n заменить (222, 11)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "221"}, {"subtype": "Исполнитель Редактор", "task_id": 49, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда\n </i>\n 2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется\n <i>\n  команда\n </i>\n 1 (если условие истинно) или\n <i>\n  команда\n </i>\n 2 (если условие ложно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 84 идущих подряд цифр 8? В ответе запишите полученную строку.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (1111) ИЛИ нашлось (8888)\n</p>\n<p>\n ЕСЛИ нашлось (1111)\n</p>\n<p>\n ТО заменить (1111, 8)\n</p>\n<p>\n ИНАЧЕ заменить (8888, 11)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "11888"}, {"subtype": "Исполнитель Редактор", "task_id": 50, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её.\n</p>\n<p>\n Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (v).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ условие\n</p>\n<p>\n ТО команда1\n</p>\n<p>\n ИНАЧЕ команда2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n</p><p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно). Часть ИНАЧЕ может отсутствовать, в этом случае, если условие ложно, никакие действия не выполняются.\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке вида 1…12…2 (7 единиц, затем 7 двоек)? В ответе запишите полученную строку.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111) ИЛИ нашлось (222)\n</p>\n<p>\n ЕСЛИ нашлось (111)\n</p>\n<p>\n ТО заменить (111, 2)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (222)\n</p>\n<p>\n ТО заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>", "answer": "12"}, {"subtype": "Исполнитель Редактор", "task_id": 51, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)\n</p>\n<p>\n заменить (01, 30)\n</p>\n<p>\n заменить (02, 101)\n</p>\n<p>\n заменить (03, 202)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки. После выполнения данной программы получилась строка, содержащая 15 единиц, 10 двоек и 60 троек. Сколько единиц было в исходной строке?\n</p>", "answer": "45"}, {"subtype": "Исполнитель Редактор", "task_id": 52, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 82 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (11111) ИЛИ нашлось (888)\n</p>\n<p>\n ЕСЛИ нашлось (11111)\n</p>\n<p>\n ТО заменить (11111, 88)\n</p>\n<p>\n ИНАЧЕ\n</p>\n<p>\n ЕСЛИ нашлось (888)\n</p>\n<p>\n ТО заменить (888, 8)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "8811"}, {"subtype": "Исполнитель Редактор", "task_id": 53, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА НЕ нашлось (00)\n</p>\n<p>\n заменить (01, 210)\n</p>\n<p>\n заменить (02, 3101)\n</p>\n<p>\n заменить (03, 2012)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка начиналась с нуля и заканчивалась нулём, а между ними содержала только единицы, двойки и тройки. После выполнения данной программы получилась строка, содержащая 61 единицу, 50 двоек и 18 троек. Сколько цифр было в исходной строке?\n</p>", "answer": "38"}, {"subtype": "Исполнитель Редактор", "task_id": 54, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\n</p>\n<p>\n заменить (v, w)\n</p>\n<p>\n нашлось (v)\n</p>\n<p>\n Дана программа для исполнителя Редактор:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (19) ИЛИ нашлось (299) ИЛИ нашлось (3999)\n</p>\n<p>\n ЕСЛИ нашлось (19)\n</p>\n<p>\n ТО заменить (19, 2)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (299)\n</p>\n<p>\n ТО заменить (299, 3)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (3999)\n</p>\n<p>\n ТО заменить (3999, 1)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из \"1\" и 100 идущих подряд цифр \"9\"? В ответе запишите полученную строку.\n</p>", "answer": "39"}, {"subtype": "Исполнитель Редактор", "task_id": 55, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 84 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (11111)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "222111"}, {"subtype": "Исполнитель Редактор", "task_id": 56, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется\n <i>\n  команда1\n </i>\n (если условие истинно) или\n <i>\n  команда2\n </i>\n (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Ниже приведена программа для исполнителя Редактор.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (19) ИЛИ нашлось (299) ИЛИ нашлось (3999)\n</p>\n<p>\n <b>\n  заменить\n </b>\n (19, 2)\n</p>\n<p>\n <b>\n  заменить\n </b>\n (299, 3)\n</p>\n<p>\n <b>\n  заменить\n </b>\n (3999, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n На вход этой программе подаётся строка длины 99, состоящая из цифры 1, за которой следуют 98 идущих подряд цифр 9. Какая строка получится в результате применения программы к этой строке? В ответе запишите полученную строку.\n</p>", "answer": "29"}, {"subtype": "Исполнитель Редактор", "task_id": 57, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (v, w).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150. Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (v).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ условие\n</p>\n<p>\n ТО команда1\n</p>\n<p>\n ИНАЧЕ команда2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 68 идущих подряд цифр 8? В ответе запишите полученную строку.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА\n <b>\n  нашлось\n </b>\n (222) ИЛИ\n <b>\n  нашлось\n </b>\n (888)\n</p>\n<p>\n ЕСЛИ\n <b>\n  нашлось\n </b>\n (222)\n</p>\n<p>\n ТО\n <b>\n  заменить\n </b>\n (222, 8)\n</p>\n<p>\n ИНАЧЕ\n <b>\n  заменить\n </b>\n (888, 2)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "28"}, {"subtype": "Исполнитель Редактор", "task_id": 58, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Найдите сумму цифр в строке, которая получится в результате применения приведённой ниже программы к строке, состоящей из 65 цифр 9.\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (999) ИЛИ нашлось (222)\n</p>\n<p>\n ЕСЛИ нашлось (222)\n</p>\n<p>\n ТО заменить (222, 9)\n</p>\n<p>\n ИНАЧЕ\n</p>\n<p>\n заменить (999, 2)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "9"}, {"subtype": "Исполнитель Редактор", "task_id": 59, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её.\n</p>\n<p>\n Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (v, w).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (v).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ условие\n</p>\n<p>\n ТО команда1\n</p>\n<p>\n ИНАЧЕ команда2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 127 идущих подряд цифр «9»? В ответе запишите полученную строку.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА\n <b>\n  нашлось\n </b>\n (333) ИЛИ\n <b>\n  нашлось\n </b>\n (999)\n</p>\n<p>\n ЕСЛИ\n <b>\n  нашлось\n </b>\n (333)\n</p>\n<p>\n ТО\n <b>\n  заменить\n </b>\n (333, 9)\n</p>\n<p>\n ИНАЧЕ\n <b>\n  заменить\n </b>\n (999, 3)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "339"}, {"subtype": "Исполнитель Редактор", "task_id": 60, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)\n</p>\n<p>\n заменить (01, 2302)\n</p>\n<p>\n заменить (02, 10)\n</p>\n<p>\n заменить (03, 201)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки. После выполнения данной программы получилась строка, содержащая 50 единиц, 12 двоек и 7 троек. Сколько единиц было в исходной строке?\n</p>", "answer": "2"}, {"subtype": "Исполнитель Редактор", "task_id": 61, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её.\n</p>\n<p>\n Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (v, w&lt;).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (v).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ условие\n</p>\n<p>\n ТО команда1\n</p>\n<p>\n ИНАЧЕ команда2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 85 идущих подряд цифр 9? В ответе запишите полученную строку.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА\n <b>\n  нашлось\n </b>\n (666) ИЛИ\n <b>\n  нашлось\n </b>\n (999)\n</p>\n<p>\n ЕСЛИ\n <b>\n  нашлось\n </b>\n (666)\n</p>\n<p>\n ТО\n <b>\n  заменить\n </b>\n (666, 9)\n</p>\n<p>\n ИНАЧЕ\n <b>\n  заменить\n </b>\n (999, 6)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "699"}, {"subtype": "Исполнитель Редактор", "task_id": 62, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке вида 1…12…2 (45 единиц и 45 двоек)?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "12"}, {"subtype": "Исполнитель Редактор", "task_id": 63, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111) ИЛИ нашлось (222)\n</p>\n<p>\n заменить (111, 22)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр, а после выполнения программы тоже получилась строка, содержащая только единицы. Какое наименьшее количество единиц могло быть в исходной строке?\n</p>", "answer": "205"}, {"subtype": "Исполнитель Редактор", "task_id": 64, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n На вход приведённой ниже программе поступает строка, начинающаяся с символа «&gt;», а затем содержащая 11 цифр 1, 12 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.\n</p>\n<p>\n Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.\n</p>\n<p>\n Так, например, если результат работы программы представлял бы собой строку, состоящую из 50 цифр 4, то верным ответом было бы число 200.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (&gt;1) ИЛИ нашлось (&gt;2) ИЛИ нашлось (&gt;3)\n</p>\n<p>\n ЕСЛИ нашлось (&gt;1)\n</p>\n<p>\n ТО заменить (&gt;1, 22&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (&gt;2)\n</p>\n<p>\n ТО заменить (&gt;2, 2&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n ЕСЛИ нашлось (&gt;3)\n</p>\n<p>\n ТО заменить (&gt;3, 1&gt;)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n <!--restored from problems table-->\n</p>", "answer": "98"}, {"subtype": "Исполнитель Редактор", "task_id": 65, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 22)\n</p>\n<p>\n заменить (222, 11)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка содержала более 100 единиц и не содержала других цифр. Укажите минимально возможную длину исходной строки, при которой в результате работы этой программы получится строка, содержащая минимально возможное количество единиц.\n</p>", "answer": "104"}, {"subtype": "Исполнитель Редактор", "task_id": 66, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 100 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (11, 2)\n</p>\n<p>\n заменить (22, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "211"}, {"subtype": "Исполнитель Редактор", "task_id": 67, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды заменить (111, 27) преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ условие\n</p>\n<p>\n ТО команда1\n</p>\n<p>\n ИНАЧЕ команда2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 99 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n ЕСЛИ нашлось (222)\n</p>\n<p>\n ТО заменить (222, 1)\n</p>\n<p>\n ИНАЧЕ заменить (111, 2)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "22211"}, {"subtype": "Исполнитель Редактор", "task_id": 68, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется\n <i>\n  команда1\n </i>\n (если условие истинно) или\n <i>\n  команда2\n </i>\n (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 125 идущих подряд цифр 8? В ответе запишите полученную строку.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА\n <b>\n  нашлось\n </b>\n (333) ИЛИ\n <b>\n  нашлось\n </b>\n (888)\n</p>\n<p>\n ЕСЛИ\n <b>\n  нашлось\n </b>\n (333)\n</p>\n<p>\n ТО\n <b>\n  заменить\n </b>\n (333, 8)\n</p>\n<p>\n ИНАЧЕ заменить (888, 3)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "388"}, {"subtype": "Исполнитель Редактор", "task_id": 69, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А) заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n заменить (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (\n <i>\n  v\n </i>\n ,\n <i>\n  w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б) нашлось (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 85 единиц?\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (11111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "211"}, {"subtype": "Исполнитель Редактор", "task_id": 70, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 70 идущих подряд цифр 8? В ответе запишите полученную строку.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (2222) ИЛИ нашлось (8888)\n</p>\n<p>\n ЕСЛИ нашлось (2222)\n</p>\n<p>\n ТО заменить (2222, 88)\n</p>\n<p>\n ИНАЧЕ заменить (8888, 22)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "22"}, {"subtype": "Исполнитель Редактор", "task_id": 71, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111) ИЛИ нашлось (222)\n</p>\n<p>\n заменить (111, 22)\n</p>\n<p>\n заменить (222, 1)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр, а после выполнения программы получилась строка, содержащая только двойки. Какое наименьшее количество единиц могло быть в исходной строке?\n</p>", "answer": "206"}, {"subtype": "Исполнитель Редактор", "task_id": 72, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n  v\n </i>\n и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w\n </i>\n . Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (555, 63)\n</p>\n<p>\n преобразует строку 12555550 в строку 1263550.\n</p>\n<p>\n Если в строке нет вхождений цепочки\n <i>\n  v\n </i>\n , то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется\n <i>\n  команда1\n </i>\n (если условие истинно) или\n <i>\n  команда2\n </i>\n (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 1000 идущих подряд цифр 8? В ответе запишите полученную строку.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА\n <b>\n  нашлось\n </b>\n (999) ИЛИ\n <b>\n  нашлось\n </b>\n (888)\n</p>\n<p>\n ЕСЛИ\n <b>\n  нашлось\n </b>\n (888)\n</p>\n<p>\n ТО\n <b>\n  заменить\n </b>\n (888, 9)\n</p>\n<p>\n ИНАЧЕ\n <b>\n  заменить\n </b>\n (999, 8)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "8998"}, {"subtype": "Исполнитель Редактор", "task_id": 73, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для редактора:\n</p>\n<p>\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА НЕ нашлось (00)\n</p>\n<p>\n заменить (01, 210)\n</p>\n<p>\n заменить (02, 3101)\n</p>\n<p>\n заменить (03, 2012)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Известно, что исходная строка начиналась с нуля и заканчивалась нулём, а между ними содержала только единицы, двойки и тройки. После выполнения данной программы получилась строка, содержащая 70 единиц, 56 двоек и 23 тройки. Сколько цифр было в исходной строке?\n</p>", "answer": "40"}, {"subtype": "Исполнитель Редактор", "task_id": 74, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах\n <i>\n </i>\n v и\n <i>\n  w\n </i>\n обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки\n <i>\n  v\n </i>\n на цепочку\n <i>\n  w.\n </i>\n Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды\n <b>\n  заменить\n </b>\n (\n <i>\n  v, w\n </i>\n ) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (\n <i>\n  v\n </i>\n ).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка\n <i>\n  v\n </i>\n в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\n</p>\n<p>\n исполнителя при этом не изменяется.\n</p>\n<p>\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА\n <i>\n  условие\n </i>\n</p>\n<p>\n <i>\n  последовательность команд\n </i>\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно).\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ\n <i>\n  условие\n </i>\n</p>\n<p>\n ТО\n <i>\n  команда1\n </i>\n</p>\n<p>\n ИНАЧЕ\n <i>\n  команда2\n </i>\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Дана программа для Редактора:\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА нашлось (111)\n</p>\n<p>\n заменить (111, 2)\n</p>\n<p>\n заменить (222, 11)\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой выше программы к строке, состоящей из 77 единиц?\n</p>", "answer": "221"}, {"subtype": "Исполнитель Редактор", "task_id": 75, "type": "12", "statement_text": "<p>\n Исполнитель Редактор получает на вход строку цифр и преобразует её.\n</p>\n<p>\n Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\n</p>\n<p>\n А)\n <b>\n  заменить\n </b>\n (v, w&lt;).\n</p>\n<p>\n Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\n</p>\n<p>\n <b>\n  заменить\n </b>\n (111, 27)\n</p>\n<p>\n преобразует строку 05111150 в строку 0527150.\n</p>\n<p>\n Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\n</p>\n<p>\n Б)\n <b>\n  нашлось\n </b>\n (v).\n</p>\n<p>\n Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n</p>\n<p>\n Цикл\n</p>\n<p>\n ПОКА условие\n</p>\n<p>\n последовательность команд\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n выполняется, пока условие истинно.\n</p>\n<p>\n В конструкции\n</p>\n<p>\n ЕСЛИ условие\n</p>\n<p>\n ТО команда1\n</p>\n<p>\n ИНАЧЕ команда2\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\n</p>\n<p>\n</p>\n<p>\n Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 85 идущих подряд цифр 7? В ответе запишите полученную строку.\n</p>\n<p>\n НАЧАЛО\n</p>\n<p>\n ПОКА\n <b>\n  нашлось\n </b>\n (333) ИЛИ\n <b>\n  нашлось\n </b>\n (777)\n</p>\n<p>\n ЕСЛИ\n <b>\n  нашлось\n </b>\n (333)\n</p>\n<p>\n ТО\n <b>\n  заменить\n </b>\n (333, 7)\n</p>\n<p>\n ИНАЧЕ\n <b>\n  заменить\n </b>\n (777, 3)\n</p>\n<p>\n КОНЕЦ ЕСЛИ\n</p>\n<p>\n КОНЕЦ ПОКА\n</p>\n<p>\n КОНЕЦ\n</p>", "answer": "377"}]